use std::fmt;

#[derive(Clone, Copy, PartialEq, Debug)]
pub struct Instruction {
    pub opcode: u16,
    pub mnemonic: &'static str,
    pub size: u8,
    pub cycles: u8,
    pub cycles_not_taken: u8,
    pub kind: InstructionKind,
}

// TODO
impl fmt::Display for Instruction {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "{}", self.mnemonic)
    }
}

#[derive(Clone, Copy, PartialEq, Debug)]
pub enum InstructionKind {
    Control,
    Jump,
    LSM8Bit, // Load/Store/Move
    LSM16Bit,
    AL8Bit, // Arithmetic/Logic
    AL16Bit,
    RSB8Bit, // Rotate, Shift and Bit
    NI,      // Not Implemented
}

// TODO: use better table json (better mnemonics) to gen code
pub static INSTRUCTIONS: [Instruction; 512] = [
    Instruction {
        opcode: 0x00,
        mnemonic: "NOP",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::Control,
    },
    Instruction {
        opcode: 0x01,
        mnemonic: "LD BC,d16",
        size: 3,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0x02,
        mnemonic: "LD (BC),A",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x03,
        mnemonic: "INC BC",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x04,
        mnemonic: "INC B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x05,
        mnemonic: "DEC B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x06,
        mnemonic: "LD B,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x07,
        mnemonic: "RLCA",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x08,
        mnemonic: "LD (a16),SP",
        size: 3,
        cycles: 20,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0x09,
        mnemonic: "ADD HL,BC",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x0A,
        mnemonic: "LD A,(BC)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x0B,
        mnemonic: "DEC BC",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x0C,
        mnemonic: "INC C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x0D,
        mnemonic: "DEC C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x0E,
        mnemonic: "LD C,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x0F,
        mnemonic: "RRCA",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x10,
        mnemonic: "STOP 0",
        size: 2,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::Control,
    },
    Instruction {
        opcode: 0x11,
        mnemonic: "LD DE,d16",
        size: 3,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0x12,
        mnemonic: "LD (DE),A",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x13,
        mnemonic: "INC DE",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x14,
        mnemonic: "INC D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x15,
        mnemonic: "DEC D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x16,
        mnemonic: "LD D,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x17,
        mnemonic: "RLA",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x18,
        mnemonic: "JR r8",
        size: 2,
        cycles: 12,
        cycles_not_taken: 12,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0x19,
        mnemonic: "ADD HL,DE",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x1A,
        mnemonic: "LD A,(DE)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x1B,
        mnemonic: "DEC DE",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x1C,
        mnemonic: "INC E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x1D,
        mnemonic: "DEC E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x1E,
        mnemonic: "LD E,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x1F,
        mnemonic: "RRA",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x20,
        mnemonic: "JR NZ,r8",
        size: 2,
        cycles: 12,
        cycles_not_taken: 8,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0x21,
        mnemonic: "LD HL,d16",
        size: 3,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0x22,
        mnemonic: "LD (HL+),A",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x23,
        mnemonic: "INC HL",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x24,
        mnemonic: "INC H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x25,
        mnemonic: "DEC H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x26,
        mnemonic: "LD H,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x27,
        mnemonic: "DAA",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x28,
        mnemonic: "JR Z,r8",
        size: 2,
        cycles: 12,
        cycles_not_taken: 8,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0x29,
        mnemonic: "ADD HL,HL",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x2A,
        mnemonic: "LD A,(HL+)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x2B,
        mnemonic: "DEC HL",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x2C,
        mnemonic: "INC L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x2D,
        mnemonic: "DEC L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x2E,
        mnemonic: "LD L,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x2F,
        mnemonic: "CPL",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x30,
        mnemonic: "JR NC,r8",
        size: 2,
        cycles: 12,
        cycles_not_taken: 8,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0x31,
        mnemonic: "LD SP,d16",
        size: 3,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0x32,
        mnemonic: "LD (HL-),A",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x33,
        mnemonic: "INC SP",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x34,
        mnemonic: "INC (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x35,
        mnemonic: "DEC (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x36,
        mnemonic: "LD (HL),d8",
        size: 2,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x37,
        mnemonic: "SCF",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x38,
        mnemonic: "JR C,r8",
        size: 2,
        cycles: 12,
        cycles_not_taken: 8,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0x39,
        mnemonic: "ADD HL,SP",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x3A,
        mnemonic: "LD A,(HL-)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x3B,
        mnemonic: "DEC SP",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0x3C,
        mnemonic: "INC A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x3D,
        mnemonic: "DEC A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x3E,
        mnemonic: "LD A,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x3F,
        mnemonic: "CCF",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x40,
        mnemonic: "LD B,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x41,
        mnemonic: "LD B,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x42,
        mnemonic: "LD B,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x43,
        mnemonic: "LD B,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x44,
        mnemonic: "LD B,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x45,
        mnemonic: "LD B,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x46,
        mnemonic: "LD B,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x47,
        mnemonic: "LD B,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x48,
        mnemonic: "LD C,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x49,
        mnemonic: "LD C,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x4A,
        mnemonic: "LD C,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x4B,
        mnemonic: "LD C,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x4C,
        mnemonic: "LD C,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x4D,
        mnemonic: "LD C,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x4E,
        mnemonic: "LD C,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x4F,
        mnemonic: "LD C,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x50,
        mnemonic: "LD D,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x51,
        mnemonic: "LD D,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x52,
        mnemonic: "LD D,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x53,
        mnemonic: "LD D,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x54,
        mnemonic: "LD D,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x55,
        mnemonic: "LD D,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x56,
        mnemonic: "LD D,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x57,
        mnemonic: "LD D,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x58,
        mnemonic: "LD E,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x59,
        mnemonic: "LD E,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x5A,
        mnemonic: "LD E,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x5B,
        mnemonic: "LD E,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x5C,
        mnemonic: "LD E,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x5D,
        mnemonic: "LD E,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x5E,
        mnemonic: "LD E,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x5F,
        mnemonic: "LD E,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x60,
        mnemonic: "LD H,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x61,
        mnemonic: "LD H,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x62,
        mnemonic: "LD H,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x63,
        mnemonic: "LD H,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x64,
        mnemonic: "LD H,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x65,
        mnemonic: "LD H,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x66,
        mnemonic: "LD H,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x67,
        mnemonic: "LD H,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x68,
        mnemonic: "LD L,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x69,
        mnemonic: "LD L,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x6A,
        mnemonic: "LD L,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x6B,
        mnemonic: "LD L,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x6C,
        mnemonic: "LD L,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x6D,
        mnemonic: "LD L,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x6E,
        mnemonic: "LD L,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x6F,
        mnemonic: "LD L,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x70,
        mnemonic: "LD (HL),B",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x71,
        mnemonic: "LD (HL),C",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x72,
        mnemonic: "LD (HL),D",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x73,
        mnemonic: "LD (HL),E",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x74,
        mnemonic: "LD (HL),H",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x75,
        mnemonic: "LD (HL),L",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x76,
        mnemonic: "HALT",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::Control,
    },
    Instruction {
        opcode: 0x77,
        mnemonic: "LD (HL),A",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x78,
        mnemonic: "LD A,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x79,
        mnemonic: "LD A,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x7A,
        mnemonic: "LD A,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x7B,
        mnemonic: "LD A,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x7C,
        mnemonic: "LD A,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x7D,
        mnemonic: "LD A,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x7E,
        mnemonic: "LD A,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x7F,
        mnemonic: "LD A,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0x80,
        mnemonic: "ADD A,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x81,
        mnemonic: "ADD A,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x82,
        mnemonic: "ADD A,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x83,
        mnemonic: "ADD A,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x84,
        mnemonic: "ADD A,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x85,
        mnemonic: "ADD A,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x86,
        mnemonic: "ADD A,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x87,
        mnemonic: "ADD A,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x88,
        mnemonic: "ADC A,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x89,
        mnemonic: "ADC A,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x8A,
        mnemonic: "ADC A,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x8B,
        mnemonic: "ADC A,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x8C,
        mnemonic: "ADC A,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x8D,
        mnemonic: "ADC A,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x8E,
        mnemonic: "ADC A,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x8F,
        mnemonic: "ADC A,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x90,
        mnemonic: "SUB B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x91,
        mnemonic: "SUB C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x92,
        mnemonic: "SUB D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x93,
        mnemonic: "SUB E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x94,
        mnemonic: "SUB H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x95,
        mnemonic: "SUB L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x96,
        mnemonic: "SUB (HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x97,
        mnemonic: "SUB A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x98,
        mnemonic: "SBC A,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x99,
        mnemonic: "SBC A,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x9A,
        mnemonic: "SBC A,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x9B,
        mnemonic: "SBC A,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x9C,
        mnemonic: "SBC A,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x9D,
        mnemonic: "SBC A,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x9E,
        mnemonic: "SBC A,(HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0x9F,
        mnemonic: "SBC A,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA0,
        mnemonic: "AND B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA1,
        mnemonic: "AND C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA2,
        mnemonic: "AND D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA3,
        mnemonic: "AND E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA4,
        mnemonic: "AND H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA5,
        mnemonic: "AND L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA6,
        mnemonic: "AND (HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA7,
        mnemonic: "AND A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA8,
        mnemonic: "XOR B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xA9,
        mnemonic: "XOR C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xAA,
        mnemonic: "XOR D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xAB,
        mnemonic: "XOR E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xAC,
        mnemonic: "XOR H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xAD,
        mnemonic: "XOR L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xAE,
        mnemonic: "XOR (HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xAF,
        mnemonic: "XOR A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB0,
        mnemonic: "OR B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB1,
        mnemonic: "OR C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB2,
        mnemonic: "OR D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB3,
        mnemonic: "OR E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB4,
        mnemonic: "OR H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB5,
        mnemonic: "OR L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB6,
        mnemonic: "OR (HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB7,
        mnemonic: "OR A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB8,
        mnemonic: "CP B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xB9,
        mnemonic: "CP C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xBA,
        mnemonic: "CP D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xBB,
        mnemonic: "CP E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xBC,
        mnemonic: "CP H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xBD,
        mnemonic: "CP L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xBE,
        mnemonic: "CP (HL)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xBF,
        mnemonic: "CP A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xC0,
        mnemonic: "RET NZ",
        size: 1,
        cycles: 20,
        cycles_not_taken: 8,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xC1,
        mnemonic: "POP BC",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xC2,
        mnemonic: "JP NZ,a16",
        size: 3,
        cycles: 16,
        cycles_not_taken: 12,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xC3,
        mnemonic: "JP a16",
        size: 3,
        cycles: 16,
        cycles_not_taken: 16,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xC4,
        mnemonic: "CALL NZ,a16",
        size: 3,
        cycles: 24,
        cycles_not_taken: 12,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xC5,
        mnemonic: "PUSH BC",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xC6,
        mnemonic: "ADD A,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xC7,
        mnemonic: "RST 00H",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xC8,
        mnemonic: "RET Z",
        size: 1,
        cycles: 20,
        cycles_not_taken: 8,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xC9,
        mnemonic: "RET",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xCA,
        mnemonic: "JP Z,a16",
        size: 3,
        cycles: 16,
        cycles_not_taken: 12,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xCB,
        mnemonic: "PREFIX CB",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::Control,
    },
    Instruction {
        opcode: 0xCC,
        mnemonic: "CALL Z,a16",
        size: 3,
        cycles: 24,
        cycles_not_taken: 12,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xCD,
        mnemonic: "CALL a16",
        size: 3,
        cycles: 24,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xCE,
        mnemonic: "ADC A,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xCF,
        mnemonic: "RST 08H",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xD0,
        mnemonic: "RET NC",
        size: 1,
        cycles: 20,
        cycles_not_taken: 8,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xD1,
        mnemonic: "POP DE",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xD2,
        mnemonic: "JP NC,a16",
        size: 3,
        cycles: 16,
        cycles_not_taken: 12,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xD3,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xD4,
        mnemonic: "CALL NC,a16",
        size: 3,
        cycles: 24,
        cycles_not_taken: 12,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xD5,
        mnemonic: "PUSH DE",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xD6,
        mnemonic: "SUB d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xD7,
        mnemonic: "RST 10H",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xD8,
        mnemonic: "RET C",
        size: 1,
        cycles: 20,
        cycles_not_taken: 8,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xD9,
        mnemonic: "RETI",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xDA,
        mnemonic: "JP C,a16",
        size: 3,
        cycles: 16,
        cycles_not_taken: 12,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xDB,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xDC,
        mnemonic: "CALL C,a16",
        size: 3,
        cycles: 24,
        cycles_not_taken: 12,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xDD,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xDE,
        mnemonic: "SBC A,d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xDF,
        mnemonic: "RST 18H",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xE0,
        mnemonic: "LDH (a8),A",
        size: 2,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0xE1,
        mnemonic: "POP HL",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xE2,
        mnemonic: "LD (C),A",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0xE3,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xE4,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xE5,
        mnemonic: "PUSH HL",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xE6,
        mnemonic: "AND d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xE7,
        mnemonic: "RST 20H",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xE8,
        mnemonic: "ADD SP,r8",
        size: 2,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::AL16Bit,
    },
    Instruction {
        opcode: 0xE9,
        mnemonic: "JP (HL)",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xEA,
        mnemonic: "LD (a16),A",
        size: 3,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0xEB,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xEC,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xED,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xEE,
        mnemonic: "XOR d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xEF,
        mnemonic: "RST 28H",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xF0,
        mnemonic: "LDH A,(a8)",
        size: 2,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0xF1,
        mnemonic: "POP AF",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xF2,
        mnemonic: "LD A,(C)",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0xF3,
        mnemonic: "DI",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::Control,
    },
    Instruction {
        opcode: 0xF4,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xF5,
        mnemonic: "PUSH AF",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xF6,
        mnemonic: "OR d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xF7,
        mnemonic: "RST 30H",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0xF8,
        mnemonic: "LD HL,SP+r8",
        size: 2,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xF9,
        mnemonic: "LD SP,HL",
        size: 1,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM16Bit,
    },
    Instruction {
        opcode: 0xFA,
        mnemonic: "LD A,(a16)",
        size: 3,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::LSM8Bit,
    },
    Instruction {
        opcode: 0xFB,
        mnemonic: "EI",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::Control,
    },
    Instruction {
        opcode: 0xFC,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::Control,
    },
    Instruction {
        opcode: 0xFD,
        mnemonic: "NI",
        size: 0,
        cycles: 0,
        cycles_not_taken: 0,
        kind: InstructionKind::NI,
    },
    Instruction {
        opcode: 0xFE,
        mnemonic: "CP d8",
        size: 2,
        cycles: 8,
        cycles_not_taken: 0,
        kind: InstructionKind::AL8Bit,
    },
    Instruction {
        opcode: 0xFF,
        mnemonic: "RST 38H",
        size: 1,
        cycles: 16,
        cycles_not_taken: 0,
        kind: InstructionKind::Jump,
    },
    Instruction {
        opcode: 0x100,
        mnemonic: "RLC B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x101,
        mnemonic: "RLC C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x102,
        mnemonic: "RLC D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x103,
        mnemonic: "RLC E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x104,
        mnemonic: "RLC H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x105,
        mnemonic: "RLC L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x106,
        mnemonic: "RLC (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x107,
        mnemonic: "RLC A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x108,
        mnemonic: "RRC B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x109,
        mnemonic: "RRC C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x10A,
        mnemonic: "RRC D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x10B,
        mnemonic: "RRC E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x10C,
        mnemonic: "RRC H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x10D,
        mnemonic: "RRC L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x10E,
        mnemonic: "RRC (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x10F,
        mnemonic: "RRC A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x110,
        mnemonic: "RL B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x111,
        mnemonic: "RL C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x112,
        mnemonic: "RL D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x113,
        mnemonic: "RL E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x114,
        mnemonic: "RL H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x115,
        mnemonic: "RL L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x116,
        mnemonic: "RL (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x117,
        mnemonic: "RL A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x118,
        mnemonic: "RR B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x119,
        mnemonic: "RR C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x11A,
        mnemonic: "RR D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x11B,
        mnemonic: "RR E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x11C,
        mnemonic: "RR H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x11D,
        mnemonic: "RR L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x11E,
        mnemonic: "RR (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x11F,
        mnemonic: "RR A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x120,
        mnemonic: "SLA B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x121,
        mnemonic: "SLA C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x122,
        mnemonic: "SLA D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x123,
        mnemonic: "SLA E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x124,
        mnemonic: "SLA H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x125,
        mnemonic: "SLA L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x126,
        mnemonic: "SLA (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x127,
        mnemonic: "SLA A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x128,
        mnemonic: "SRA B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x129,
        mnemonic: "SRA C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x12A,
        mnemonic: "SRA D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x12B,
        mnemonic: "SRA E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x12C,
        mnemonic: "SRA H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x12D,
        mnemonic: "SRA L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x12E,
        mnemonic: "SRA (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x12F,
        mnemonic: "SRA A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x130,
        mnemonic: "SWAP B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x131,
        mnemonic: "SWAP C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x132,
        mnemonic: "SWAP D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x133,
        mnemonic: "SWAP E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x134,
        mnemonic: "SWAP H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x135,
        mnemonic: "SWAP L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x136,
        mnemonic: "SWAP (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x137,
        mnemonic: "SWAP A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x138,
        mnemonic: "SRL B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x139,
        mnemonic: "SRL C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x13A,
        mnemonic: "SRL D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x13B,
        mnemonic: "SRL E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x13C,
        mnemonic: "SRL H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x13D,
        mnemonic: "SRL L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x13E,
        mnemonic: "SRL (HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x13F,
        mnemonic: "SRL A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x140,
        mnemonic: "BIT 0,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x141,
        mnemonic: "BIT 0,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x142,
        mnemonic: "BIT 0,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x143,
        mnemonic: "BIT 0,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x144,
        mnemonic: "BIT 0,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x145,
        mnemonic: "BIT 0,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x146,
        mnemonic: "BIT 0,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x147,
        mnemonic: "BIT 0,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x148,
        mnemonic: "BIT 1,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x149,
        mnemonic: "BIT 1,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x14A,
        mnemonic: "BIT 1,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x14B,
        mnemonic: "BIT 1,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x14C,
        mnemonic: "BIT 1,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x14D,
        mnemonic: "BIT 1,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x14E,
        mnemonic: "BIT 1,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x14F,
        mnemonic: "BIT 1,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x150,
        mnemonic: "BIT 2,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x151,
        mnemonic: "BIT 2,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x152,
        mnemonic: "BIT 2,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x153,
        mnemonic: "BIT 2,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x154,
        mnemonic: "BIT 2,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x155,
        mnemonic: "BIT 2,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x156,
        mnemonic: "BIT 2,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x157,
        mnemonic: "BIT 2,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x158,
        mnemonic: "BIT 3,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x159,
        mnemonic: "BIT 3,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x15A,
        mnemonic: "BIT 3,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x15B,
        mnemonic: "BIT 3,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x15C,
        mnemonic: "BIT 3,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x15D,
        mnemonic: "BIT 3,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x15E,
        mnemonic: "BIT 3,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x15F,
        mnemonic: "BIT 3,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x160,
        mnemonic: "BIT 4,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x161,
        mnemonic: "BIT 4,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x162,
        mnemonic: "BIT 4,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x163,
        mnemonic: "BIT 4,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x164,
        mnemonic: "BIT 4,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x165,
        mnemonic: "BIT 4,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x166,
        mnemonic: "BIT 4,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x167,
        mnemonic: "BIT 4,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x168,
        mnemonic: "BIT 5,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x169,
        mnemonic: "BIT 5,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x16A,
        mnemonic: "BIT 5,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x16B,
        mnemonic: "BIT 5,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x16C,
        mnemonic: "BIT 5,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x16D,
        mnemonic: "BIT 5,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x16E,
        mnemonic: "BIT 5,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x16F,
        mnemonic: "BIT 5,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x170,
        mnemonic: "BIT 6,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x171,
        mnemonic: "BIT 6,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x172,
        mnemonic: "BIT 6,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x173,
        mnemonic: "BIT 6,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x174,
        mnemonic: "BIT 6,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x175,
        mnemonic: "BIT 6,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x176,
        mnemonic: "BIT 6,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x177,
        mnemonic: "BIT 6,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x178,
        mnemonic: "BIT 7,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x179,
        mnemonic: "BIT 7,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x17A,
        mnemonic: "BIT 7,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x17B,
        mnemonic: "BIT 7,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x17C,
        mnemonic: "BIT 7,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x17D,
        mnemonic: "BIT 7,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x17E,
        mnemonic: "BIT 7,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x17F,
        mnemonic: "BIT 7,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x180,
        mnemonic: "RES 0,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x181,
        mnemonic: "RES 0,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x182,
        mnemonic: "RES 0,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x183,
        mnemonic: "RES 0,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x184,
        mnemonic: "RES 0,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x185,
        mnemonic: "RES 0,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x186,
        mnemonic: "RES 0,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x187,
        mnemonic: "RES 0,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x188,
        mnemonic: "RES 1,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x189,
        mnemonic: "RES 1,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x18A,
        mnemonic: "RES 1,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x18B,
        mnemonic: "RES 1,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x18C,
        mnemonic: "RES 1,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x18D,
        mnemonic: "RES 1,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x18E,
        mnemonic: "RES 1,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x18F,
        mnemonic: "RES 1,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x190,
        mnemonic: "RES 2,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x191,
        mnemonic: "RES 2,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x192,
        mnemonic: "RES 2,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x193,
        mnemonic: "RES 2,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x194,
        mnemonic: "RES 2,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x195,
        mnemonic: "RES 2,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x196,
        mnemonic: "RES 2,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x197,
        mnemonic: "RES 2,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x198,
        mnemonic: "RES 3,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x199,
        mnemonic: "RES 3,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x19A,
        mnemonic: "RES 3,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x19B,
        mnemonic: "RES 3,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x19C,
        mnemonic: "RES 3,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x19D,
        mnemonic: "RES 3,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x19E,
        mnemonic: "RES 3,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x19F,
        mnemonic: "RES 3,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A0,
        mnemonic: "RES 4,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A1,
        mnemonic: "RES 4,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A2,
        mnemonic: "RES 4,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A3,
        mnemonic: "RES 4,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A4,
        mnemonic: "RES 4,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A5,
        mnemonic: "RES 4,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A6,
        mnemonic: "RES 4,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A7,
        mnemonic: "RES 4,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A8,
        mnemonic: "RES 5,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1A9,
        mnemonic: "RES 5,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1AA,
        mnemonic: "RES 5,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1AB,
        mnemonic: "RES 5,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1AC,
        mnemonic: "RES 5,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1AD,
        mnemonic: "RES 5,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1AE,
        mnemonic: "RES 5,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1AF,
        mnemonic: "RES 5,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B0,
        mnemonic: "RES 6,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B1,
        mnemonic: "RES 6,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B2,
        mnemonic: "RES 6,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B3,
        mnemonic: "RES 6,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B4,
        mnemonic: "RES 6,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B5,
        mnemonic: "RES 6,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B6,
        mnemonic: "RES 6,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B7,
        mnemonic: "RES 6,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B8,
        mnemonic: "RES 7,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1B9,
        mnemonic: "RES 7,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1BA,
        mnemonic: "RES 7,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1BB,
        mnemonic: "RES 7,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1BC,
        mnemonic: "RES 7,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1BD,
        mnemonic: "RES 7,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1BE,
        mnemonic: "RES 7,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1BF,
        mnemonic: "RES 7,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C0,
        mnemonic: "SET 0,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C1,
        mnemonic: "SET 0,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C2,
        mnemonic: "SET 0,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C3,
        mnemonic: "SET 0,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C4,
        mnemonic: "SET 0,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C5,
        mnemonic: "SET 0,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C6,
        mnemonic: "SET 0,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C7,
        mnemonic: "SET 0,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C8,
        mnemonic: "SET 1,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1C9,
        mnemonic: "SET 1,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1CA,
        mnemonic: "SET 1,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1CB,
        mnemonic: "SET 1,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1CC,
        mnemonic: "SET 1,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1CD,
        mnemonic: "SET 1,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1CE,
        mnemonic: "SET 1,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1CF,
        mnemonic: "SET 1,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D0,
        mnemonic: "SET 2,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D1,
        mnemonic: "SET 2,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D2,
        mnemonic: "SET 2,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D3,
        mnemonic: "SET 2,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D4,
        mnemonic: "SET 2,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D5,
        mnemonic: "SET 2,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D6,
        mnemonic: "SET 2,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D7,
        mnemonic: "SET 2,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D8,
        mnemonic: "SET 3,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1D9,
        mnemonic: "SET 3,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1DA,
        mnemonic: "SET 3,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1DB,
        mnemonic: "SET 3,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1DC,
        mnemonic: "SET 3,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1DD,
        mnemonic: "SET 3,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1DE,
        mnemonic: "SET 3,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1DF,
        mnemonic: "SET 3,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E0,
        mnemonic: "SET 4,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E1,
        mnemonic: "SET 4,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E2,
        mnemonic: "SET 4,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E3,
        mnemonic: "SET 4,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E4,
        mnemonic: "SET 4,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E5,
        mnemonic: "SET 4,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E6,
        mnemonic: "SET 4,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E7,
        mnemonic: "SET 4,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E8,
        mnemonic: "SET 5,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1E9,
        mnemonic: "SET 5,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1EA,
        mnemonic: "SET 5,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1EB,
        mnemonic: "SET 5,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1EC,
        mnemonic: "SET 5,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1ED,
        mnemonic: "SET 5,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1EE,
        mnemonic: "SET 5,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1EF,
        mnemonic: "SET 5,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F0,
        mnemonic: "SET 6,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F1,
        mnemonic: "SET 6,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F2,
        mnemonic: "SET 6,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F3,
        mnemonic: "SET 6,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F4,
        mnemonic: "SET 6,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F5,
        mnemonic: "SET 6,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F6,
        mnemonic: "SET 6,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F7,
        mnemonic: "SET 6,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F8,
        mnemonic: "SET 7,B",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1F9,
        mnemonic: "SET 7,C",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1FA,
        mnemonic: "SET 7,D",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1FB,
        mnemonic: "SET 7,E",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1FC,
        mnemonic: "SET 7,H",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1FD,
        mnemonic: "SET 7,L",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1FE,
        mnemonic: "SET 7,(HL)",
        size: 1,
        cycles: 12,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
    Instruction {
        opcode: 0x1FF,
        mnemonic: "SET 7,A",
        size: 1,
        cycles: 4,
        cycles_not_taken: 0,
        kind: InstructionKind::RSB8Bit,
    },
];
