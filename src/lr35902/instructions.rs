use crate::lr35902::LR35902;

#[derive(Debug, Clone)]
pub struct Instruction {
    pub opcode: u8,
    pub mnemonic: String,
    pub size: u8,
    pub cycles: u8,
    pub function: fn(&mut LR35902, opcode: u8),
}

impl Instruction {
    // Arguments in the same order as https://www.pastraiser.com/cpu/gameboy/gameboy_opcodes.html
    fn new(
        opcode: u8,
        mnemonic: &str,
        size: u8,
        cycles: u8,
        function: fn(&mut LR35902, opcode: u8),
    ) -> Self {
        let mnemonic = mnemonic.to_string();
        Self {
            opcode,
            mnemonic,
            size,
            cycles,
            function,
        }
    }
}

fn not_implemented(opcode: u8) -> Instruction {
    Instruction::new(opcode, "", 1, 4, |_, opcode| {
        println!("not-implemented: {}", opcode);
        unimplemented!();
    })
}

fn not_implemented_cb(opcode: u8) -> Instruction {
    Instruction::new(opcode, "", 1, 4, |_, opcode| {
        println!("not-implemented cb: {}", opcode);
        unimplemented!();
    })
}

pub fn instructions() -> Vec<Instruction> {
    vec![
        Instruction::new(0x0, "NOP", 1, 4, |_, _| {}),
        Instruction::new(0x1, "LD BC,d16", 3, 12, |cpu, _| {
            // TODO: correctly test shit
            // notice I said correctly just to spite Freitas
            cpu.bc = cpu.get_immediate16(0);
        }),
        not_implemented(0x2),
        not_implemented(0x3),
        not_implemented(0x4),
        not_implemented(0x5),
        not_implemented(0x6),
        not_implemented(0x7),
        not_implemented(0x8),
        not_implemented(0x9),
        not_implemented(0xA),
        not_implemented(0xB),
        not_implemented(0xC),
        not_implemented(0xD),
        not_implemented(0xE),
        not_implemented(0xF),
        not_implemented(0x10),
        Instruction::new(0x11, "LD DE,d16", 3, 12, |cpu, _| {
            cpu.de = cpu.get_immediate16(0);
        }),
        not_implemented(0x12),
        not_implemented(0x13),
        not_implemented(0x14),
        not_implemented(0x15),
        not_implemented(0x16),
        not_implemented(0x17),
        not_implemented(0x18),
        not_implemented(0x19),
        not_implemented(0x1A),
        not_implemented(0x1B),
        not_implemented(0x1C),
        not_implemented(0x1D),
        not_implemented(0x1E),
        not_implemented(0x1F),
        not_implemented(0x20),
        Instruction::new(0x21, "LD HL,d16", 3, 12, |cpu, _| {
            cpu.hl = cpu.get_immediate16(0);
        }),
        not_implemented(0x22),
        not_implemented(0x23),
        not_implemented(0x24),
        not_implemented(0x25),
        not_implemented(0x26),
        not_implemented(0x27),
        not_implemented(0x28),
        not_implemented(0x29),
        not_implemented(0x2A),
        not_implemented(0x2B),
        not_implemented(0x2C),
        not_implemented(0x2D),
        not_implemented(0x2E),
        not_implemented(0x2F),
        not_implemented(0x30),
        Instruction::new(0x31, "LD SP,d16", 3, 12, |cpu, _| {
            cpu.sp = cpu.get_immediate16(0);
        }),
        Instruction::new(0x32, "LD (HL-),A", 1, 8, |cpu, _| {
            cpu.set_memory8(cpu.hl, cpu.a());
            cpu.hl -= 1;
        }),
        not_implemented(0x33),
        not_implemented(0x34),
        not_implemented(0x35),
        not_implemented(0x36),
        not_implemented(0x37),
        not_implemented(0x38),
        not_implemented(0x39),
        not_implemented(0x3A),
        not_implemented(0x3B),
        not_implemented(0x3C),
        not_implemented(0x3D),
        Instruction::new(0x3E, "LD A,d8", 2, 8, |cpu, _| {
            cpu.set_a(cpu.get_immediate8(0));
        }),
        not_implemented(0x3F),
        not_implemented(0x40),
        not_implemented(0x41),
        not_implemented(0x42),
        not_implemented(0x43),
        not_implemented(0x44),
        not_implemented(0x45),
        not_implemented(0x46),
        not_implemented(0x47),
        not_implemented(0x48),
        not_implemented(0x49),
        not_implemented(0x4A),
        not_implemented(0x4B),
        not_implemented(0x4C),
        not_implemented(0x4D),
        not_implemented(0x4E),
        not_implemented(0x4F),
        not_implemented(0x50),
        not_implemented(0x51),
        not_implemented(0x52),
        not_implemented(0x53),
        not_implemented(0x54),
        not_implemented(0x55),
        not_implemented(0x56),
        not_implemented(0x57),
        not_implemented(0x58),
        not_implemented(0x59),
        not_implemented(0x5A),
        not_implemented(0x5B),
        not_implemented(0x5C),
        not_implemented(0x5D),
        not_implemented(0x5E),
        not_implemented(0x5F),
        not_implemented(0x60),
        not_implemented(0x61),
        not_implemented(0x62),
        not_implemented(0x63),
        not_implemented(0x64),
        not_implemented(0x65),
        not_implemented(0x66),
        not_implemented(0x67),
        not_implemented(0x68),
        not_implemented(0x69),
        not_implemented(0x6A),
        not_implemented(0x6B),
        not_implemented(0x6C),
        not_implemented(0x6D),
        not_implemented(0x6E),
        not_implemented(0x6F),
        not_implemented(0x70),
        not_implemented(0x71),
        not_implemented(0x72),
        not_implemented(0x73),
        not_implemented(0x74),
        not_implemented(0x75),
        not_implemented(0x76),
        not_implemented(0x77),
        not_implemented(0x78),
        not_implemented(0x79),
        not_implemented(0x7A),
        not_implemented(0x7B),
        not_implemented(0x7C),
        not_implemented(0x7D),
        not_implemented(0x7E),
        not_implemented(0x7F),
        Instruction::new(0x80, "ADD A,B", 1, 4, |cpu, _| {
            cpu.set_a(cpu.a() + cpu.b());
        }),
        not_implemented(0x81),
        not_implemented(0x82),
        not_implemented(0x83),
        not_implemented(0x84),
        not_implemented(0x85),
        not_implemented(0x86),
        not_implemented(0x87),
        not_implemented(0x88),
        not_implemented(0x89),
        not_implemented(0x8A),
        not_implemented(0x8B),
        not_implemented(0x8C),
        not_implemented(0x8D),
        not_implemented(0x8E),
        not_implemented(0x8F),
        not_implemented(0x90),
        not_implemented(0x91),
        not_implemented(0x92),
        not_implemented(0x93),
        not_implemented(0x94),
        not_implemented(0x95),
        not_implemented(0x96),
        not_implemented(0x97),
        not_implemented(0x98),
        not_implemented(0x99),
        not_implemented(0x9A),
        not_implemented(0x9B),
        not_implemented(0x9C),
        not_implemented(0x9D),
        not_implemented(0x9E),
        not_implemented(0x9F),
        not_implemented(0xA0),
        not_implemented(0xA1),
        not_implemented(0xA2),
        not_implemented(0xA3),
        not_implemented(0xA4),
        not_implemented(0xA5),
        not_implemented(0xA6),
        not_implemented(0xA7),
        not_implemented(0xA8),
        not_implemented(0xA9),
        not_implemented(0xAA),
        not_implemented(0xAB),
        not_implemented(0xAC),
        not_implemented(0xAD),
        not_implemented(0xAE),
        Instruction::new(0xAF, "XOR A", 1, 4, |cpu, _| {
            cpu.set_a(cpu.a() ^ cpu.a());
        }),
        not_implemented(0xB0),
        not_implemented(0xB1),
        not_implemented(0xB2),
        not_implemented(0xB3),
        not_implemented(0xB4),
        not_implemented(0xB5),
        not_implemented(0xB6),
        not_implemented(0xB7),
        not_implemented(0xB8),
        not_implemented(0xB9),
        not_implemented(0xBA),
        not_implemented(0xBB),
        not_implemented(0xBC),
        not_implemented(0xBD),
        not_implemented(0xBE),
        not_implemented(0xBF),
        not_implemented(0xC0),
        not_implemented(0xC1),
        not_implemented(0xC2),
        not_implemented(0xC3),
        not_implemented(0xC4),
        not_implemented(0xC5),
        not_implemented(0xC6),
        not_implemented(0xC7),
        not_implemented(0xC8),
        not_implemented(0xC9),
        not_implemented(0xCA),
        Instruction::new(0xCB, "PREFIX CB", 1, 4, |cpu, _| {
            let instruction = cpu.cb_instructions[cpu.memory8(cpu.pc + 1) as usize].clone();
            (instruction.function)(cpu, dbg!(instruction.opcode));
            cpu.pc += instruction.size as u16 + 1;
        }),
        not_implemented(0xCC),
        not_implemented(0xCD),
        not_implemented(0xCE),
        not_implemented(0xCF),
        not_implemented(0xD0),
        not_implemented(0xD1),
        not_implemented(0xD2),
        not_implemented(0xD3),
        not_implemented(0xD4),
        not_implemented(0xD5),
        not_implemented(0xD6),
        not_implemented(0xD7),
        not_implemented(0xD8),
        not_implemented(0xD9),
        not_implemented(0xDA),
        not_implemented(0xDB),
        not_implemented(0xDC),
        not_implemented(0xDD),
        not_implemented(0xDE),
        not_implemented(0xDF),
        not_implemented(0xE0),
        not_implemented(0xE1),
        Instruction::new(0xE2, "LD (C),A", 2, 8, |cpu, _| {
            cpu.set_memory8(cpu.c().into(), cpu.a());
        }),
        not_implemented(0xE3),
        not_implemented(0xE4),
        not_implemented(0xE5),
        not_implemented(0xE6),
        not_implemented(0xE7),
        not_implemented(0xE8),
        not_implemented(0xE9),
        not_implemented(0xEA),
        not_implemented(0xEB),
        not_implemented(0xEC),
        not_implemented(0xED),
        not_implemented(0xEE),
        not_implemented(0xEF),
        not_implemented(0xF0),
        not_implemented(0xF1),
        not_implemented(0xF2),
        not_implemented(0xF3),
        not_implemented(0xF4),
        not_implemented(0xF5),
        not_implemented(0xF6),
        not_implemented(0xF7),
        not_implemented(0xF8),
        not_implemented(0xF9),
        not_implemented(0xFA),
        not_implemented(0xFB),
        not_implemented(0xFC),
        not_implemented(0xFD),
        not_implemented(0xFE),
        not_implemented(0xFF),
    ]
}

pub fn cb_instructions() -> Vec<Instruction> {
    vec![
        not_implemented_cb(0x0),
        not_implemented_cb(0x1),
        not_implemented_cb(0x2),
        not_implemented_cb(0x3),
        not_implemented_cb(0x4),
        not_implemented_cb(0x5),
        not_implemented_cb(0x6),
        not_implemented_cb(0x7),
        not_implemented_cb(0x8),
        not_implemented_cb(0x9),
        not_implemented_cb(0xA),
        not_implemented_cb(0xB),
        not_implemented_cb(0xC),
        not_implemented_cb(0xD),
        not_implemented_cb(0xE),
        not_implemented_cb(0xF),
        not_implemented_cb(0x10),
        not_implemented_cb(0x11),
        not_implemented_cb(0x12),
        not_implemented_cb(0x13),
        not_implemented_cb(0x14),
        not_implemented_cb(0x15),
        not_implemented_cb(0x16),
        not_implemented_cb(0x17),
        not_implemented_cb(0x18),
        not_implemented_cb(0x19),
        not_implemented_cb(0x1A),
        not_implemented_cb(0x1B),
        not_implemented_cb(0x1C),
        not_implemented_cb(0x1D),
        not_implemented_cb(0x1E),
        not_implemented_cb(0x1F),
        not_implemented_cb(0x20),
        not_implemented_cb(0x21),
        not_implemented_cb(0x22),
        not_implemented_cb(0x23),
        not_implemented_cb(0x24),
        not_implemented_cb(0x25),
        not_implemented_cb(0x26),
        not_implemented_cb(0x27),
        not_implemented_cb(0x28),
        not_implemented_cb(0x29),
        not_implemented_cb(0x2A),
        not_implemented_cb(0x2B),
        not_implemented_cb(0x2C),
        not_implemented_cb(0x2D),
        not_implemented_cb(0x2E),
        not_implemented_cb(0x2F),
        not_implemented_cb(0x30),
        not_implemented_cb(0x31),
        not_implemented_cb(0x32),
        not_implemented_cb(0x33),
        not_implemented_cb(0x34),
        not_implemented_cb(0x35),
        not_implemented_cb(0x36),
        not_implemented_cb(0x37),
        not_implemented_cb(0x38),
        not_implemented_cb(0x39),
        not_implemented_cb(0x3A),
        not_implemented_cb(0x3B),
        not_implemented_cb(0x3C),
        not_implemented_cb(0x3D),
        not_implemented_cb(0x3E),
        not_implemented_cb(0x3F),
        not_implemented_cb(0x40),
        not_implemented_cb(0x41),
        not_implemented_cb(0x42),
        not_implemented_cb(0x43),
        not_implemented_cb(0x44),
        not_implemented_cb(0x45),
        not_implemented_cb(0x46),
        not_implemented_cb(0x47),
        not_implemented_cb(0x48),
        not_implemented_cb(0x49),
        not_implemented_cb(0x4A),
        not_implemented_cb(0x4B),
        not_implemented_cb(0x4C),
        not_implemented_cb(0x4D),
        not_implemented_cb(0x4E),
        not_implemented_cb(0x4F),
        not_implemented_cb(0x50),
        not_implemented_cb(0x51),
        not_implemented_cb(0x52),
        not_implemented_cb(0x53),
        not_implemented_cb(0x54),
        not_implemented_cb(0x55),
        not_implemented_cb(0x56),
        not_implemented_cb(0x57),
        not_implemented_cb(0x58),
        not_implemented_cb(0x59),
        not_implemented_cb(0x5A),
        not_implemented_cb(0x5B),
        not_implemented_cb(0x5C),
        not_implemented_cb(0x5D),
        not_implemented_cb(0x5E),
        not_implemented_cb(0x5F),
        not_implemented_cb(0x60),
        not_implemented_cb(0x61),
        not_implemented_cb(0x62),
        not_implemented_cb(0x63),
        not_implemented_cb(0x64),
        not_implemented_cb(0x65),
        not_implemented_cb(0x66),
        not_implemented_cb(0x67),
        not_implemented_cb(0x68),
        not_implemented_cb(0x69),
        not_implemented_cb(0x6A),
        not_implemented_cb(0x6B),
        not_implemented_cb(0x6C),
        not_implemented_cb(0x6D),
        not_implemented_cb(0x6E),
        not_implemented_cb(0x6F),
        not_implemented_cb(0x70),
        not_implemented_cb(0x71),
        not_implemented_cb(0x72),
        not_implemented_cb(0x73),
        not_implemented_cb(0x74),
        not_implemented_cb(0x75),
        not_implemented_cb(0x76),
        not_implemented_cb(0x77),
        not_implemented_cb(0x78),
        not_implemented_cb(0x79),
        not_implemented_cb(0x7A),
        not_implemented_cb(0x7B),
        not_implemented_cb(0x7C),
        not_implemented_cb(0x7D),
        not_implemented_cb(0x7E),
        not_implemented_cb(0x7F),
        not_implemented_cb(0x80),
        not_implemented_cb(0x81),
        not_implemented_cb(0x82),
        not_implemented_cb(0x83),
        not_implemented_cb(0x84),
        not_implemented_cb(0x85),
        not_implemented_cb(0x86),
        not_implemented_cb(0x87),
        not_implemented_cb(0x88),
        not_implemented_cb(0x89),
        not_implemented_cb(0x8A),
        not_implemented_cb(0x8B),
        not_implemented_cb(0x8C),
        not_implemented_cb(0x8D),
        not_implemented_cb(0x8E),
        not_implemented_cb(0x8F),
        not_implemented_cb(0x90),
        not_implemented_cb(0x91),
        not_implemented_cb(0x92),
        not_implemented_cb(0x93),
        not_implemented_cb(0x94),
        not_implemented_cb(0x95),
        not_implemented_cb(0x96),
        not_implemented_cb(0x97),
        not_implemented_cb(0x98),
        not_implemented_cb(0x99),
        not_implemented_cb(0x9A),
        not_implemented_cb(0x9B),
        not_implemented_cb(0x9C),
        not_implemented_cb(0x9D),
        not_implemented_cb(0x9E),
        not_implemented_cb(0x9F),
        not_implemented_cb(0xA0),
        not_implemented_cb(0xA1),
        not_implemented_cb(0xA2),
        not_implemented_cb(0xA3),
        not_implemented_cb(0xA4),
        not_implemented_cb(0xA5),
        not_implemented_cb(0xA6),
        not_implemented_cb(0xA7),
        not_implemented_cb(0xA8),
        not_implemented_cb(0xA9),
        not_implemented_cb(0xAA),
        not_implemented_cb(0xAB),
        not_implemented_cb(0xAC),
        not_implemented_cb(0xAD),
        not_implemented_cb(0xAE),
        not_implemented_cb(0xAF),
        not_implemented_cb(0xB0),
        not_implemented_cb(0xB1),
        not_implemented_cb(0xB2),
        not_implemented_cb(0xB3),
        not_implemented_cb(0xB4),
        not_implemented_cb(0xB5),
        not_implemented_cb(0xB6),
        not_implemented_cb(0xB7),
        not_implemented_cb(0xB8),
        not_implemented_cb(0xB9),
        not_implemented_cb(0xBA),
        not_implemented_cb(0xBB),
        not_implemented_cb(0xBC),
        not_implemented_cb(0xBD),
        not_implemented_cb(0xBE),
        not_implemented_cb(0xBF),
        not_implemented_cb(0xC0),
        not_implemented_cb(0xC1),
        not_implemented_cb(0xC2),
        not_implemented_cb(0xC3),
        not_implemented_cb(0xC4),
        not_implemented_cb(0xC5),
        not_implemented_cb(0xC6),
        not_implemented_cb(0xC7),
        not_implemented_cb(0xC8),
        not_implemented_cb(0xC9),
        not_implemented_cb(0xCA),
        not_implemented_cb(0xCB),
        not_implemented_cb(0xCC),
        not_implemented_cb(0xCD),
        not_implemented_cb(0xCE),
        not_implemented_cb(0xCF),
        not_implemented_cb(0xD0),
        not_implemented_cb(0xD1),
        not_implemented_cb(0xD2),
        not_implemented_cb(0xD3),
        not_implemented_cb(0xD4),
        not_implemented_cb(0xD5),
        not_implemented_cb(0xD6),
        not_implemented_cb(0xD7),
        not_implemented_cb(0xD8),
        not_implemented_cb(0xD9),
        not_implemented_cb(0xDA),
        not_implemented_cb(0xDB),
        not_implemented_cb(0xDC),
        not_implemented_cb(0xDD),
        not_implemented_cb(0xDE),
        not_implemented_cb(0xDF),
        not_implemented_cb(0xE0),
        not_implemented_cb(0xE1),
        not_implemented_cb(0xE2),
        not_implemented_cb(0xE3),
        not_implemented_cb(0xE4),
        not_implemented_cb(0xE5),
        not_implemented_cb(0xE6),
        not_implemented_cb(0xE7),
        not_implemented_cb(0xE8),
        not_implemented_cb(0xE9),
        not_implemented_cb(0xEA),
        not_implemented_cb(0xEB),
        not_implemented_cb(0xEC),
        not_implemented_cb(0xED),
        not_implemented_cb(0xEE),
        not_implemented_cb(0xEF),
        not_implemented_cb(0xF0),
        not_implemented_cb(0xF1),
        not_implemented_cb(0xF2),
        not_implemented_cb(0xF3),
        not_implemented_cb(0xF4),
        not_implemented_cb(0xF5),
        not_implemented_cb(0xF6),
        not_implemented_cb(0xF7),
        not_implemented_cb(0xF8),
        not_implemented_cb(0xF9),
        not_implemented_cb(0xFA),
        not_implemented_cb(0xFB),
        not_implemented_cb(0xFC),
        not_implemented_cb(0xFD),
        not_implemented_cb(0xFE),
        not_implemented_cb(0xFF),
    ]
}
